.hamburger {
  padding: $hamburger-padding-y $hamburger-padding-x;
  display: none;
  cursor: pointer;

  @include tablets() {
      display: inline-block;
      z-index: 200;
  }

  transition-property: opacity, filter;
  transition-duration: 0.15s;
  transition-timing-function: linear;

  outline: none;

  &:hover {
    @if $hamburger-hover-use-filter == true {
      filter: $hamburger-hover-filter;
    }
    @else {
      opacity: $hamburger-hover-opacity;
    }
  }

  &.is-active {
    &:hover {
      @if $hamburger-hover-use-filter == true {
        filter: $hamburger-active-hover-filter;
      }
      @else {
        opacity: $hamburger-active-hover-opacity;
      }
    }

    .hamburger-inner,
    .hamburger-inner::before,
    .hamburger-inner::after {
      background-color: $hamburger-active-layer-color;
    }
  }
}

.hamburger-box {
  width: $hamburger-layer-width;
  height: calc($hamburger-layer-height * 3 + $hamburger-layer-spacing * 2);
  display: inline-block;
  position: relative;
}

.hamburger-inner {
  display: block;
  top: 50%;
  margin-top: calc($hamburger-layer-height / -2);

  &,
  &::before,
  &::after {
    width: $hamburger-layer-width;
    height: $hamburger-layer-height;
    background-color: $hamburger-layer-color;
    border-radius: $hamburger-layer-border-radius;
    position: absolute;
    transition-property: transform;
    transition-duration: 0.15s;
    transition-timing-function: ease;
  }

  &::before,
  &::after {
    content: "";
    display: block;
  }

  &::before {
    top: calc(($hamburger-layer-spacing + $hamburger-layer-height) * -1);
  }

  &::after {
    bottom: calc(($hamburger-layer-spacing + $hamburger-layer-height) * -1);
  }
}

@if index($hamburger-types, elastic) {
  /*
   * Elastic
   */
  .hamburger--elastic {
    .hamburger-inner {
      top: calc($hamburger-layer-height / 2);
      transition-duration: 0.275s;
      transition-timing-function: cubic-bezier(0.68, -0.55, 0.265, 1.55);

      &::before {
        top: calc($hamburger-layer-height + $hamburger-layer-spacing);
        transition: opacity 0.125s 0.275s ease;
      }

      &::after {
        top: calc(($hamburger-layer-height * 2) + ($hamburger-layer-spacing * 2));
        transition: transform 0.275s cubic-bezier(0.68, -0.55, 0.265, 1.55);
      }
    }

    &.is-active {
      .hamburger-inner {
        $y-offset: calc($hamburger-layer-spacing + $hamburger-layer-height);

        transform: translate3d(0, $y-offset, 0) rotate(135deg);
        transition-delay: 0.075s;

        &::before {
          transition-delay: 0s;
          opacity: 0;
        }

        &::after {
          transform: translate3d(0, calc($y-offset * -2), 0) rotate(-270deg);
          transition-delay: 0.075s;
        }
      }
    }
  }
}